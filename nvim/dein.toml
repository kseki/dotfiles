#-------------------------------------------
# Plugin manager
#-------------------------------------------
[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
let g:dein#install_max_processes = 16
let g:dein#install_message_type = 'echo'

nnoremap <silent> <Space>I :call dein#install()<CR>
nnoremap <silent> <Space>U :call dein#update()<CR>
nnoremap <Space>R :call dein#recache_runtimepath()<CR>
'''

[[plugins]]
repo = 'thinca/vim-localrc'

#-------------------------------------------
# Display
#-------------------------------------------
# [[plugins]]
# repo = 'dracula/vim'
# hook_add = '''
#   let g:dracula_italic = 0
#
#   autocmd MyAutoCmd VimEnter * nested call s:SetupColors()
#   function! s:SetupColors()
#     colorscheme dracula
#     highlight! link ALEWarningSign DiffChange
#     highlight! link ALEErrorSign Error
#   endfunction
#
# '''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_bufTypeExclude = ['help', 'terminal']
'''
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
        \ 'colorscheme': 'dracula_pro',
        \ 'active': {
        \   'left': [
        \     ['mode', 'paste'],
        \     ['gitbranch', 'readonly', 'filename', 'modified'],
        \     ['ale'],
        \   ]
        \ },
        \ 'component_function': {
        \   'gitbranch': 'fugitive#head',
        \   'ale': 'ALEStatus',
        \ },
        \ 'tabline': {
        \   'left': [ [ 'tabs' ] ],
        \   'right': [ [ 'close' ] ]
        \ },
        \}
        " \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2"  },
        " \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3"  }
        " \ 'separator': { 'left': '', 'right': ''  },
        " \ 'subseparator': { 'left': '', 'right': ''  }

  function! ALEStatus() abort
    let l:count = ale#statusline#Count(bufnr(''))
    let l:errors = l:count.error + l:count.style_error
    let l:warnings = l:count.warning + l:count.style_warning
    return l:count.total == 0 ? 'ALE: OK' : 'ALE: E:' . l:errors . ' ' . 'W:' . l:warnings
  endfunction
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
depends = ['fern.vim']
add_hook = '''
augroup vimrc_glyph_palette
  autocmd!
  autocmd FileType fern call glyph_palette#apply()
augroup END
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
let g:fern#default_hidden=1

nnoremap <silent> <F3> :Fern . -reveal=% -drawer -toggle -width=40<CR>
autocmd FileType fern set nonumber signcolumn=no
'''

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
let g:fern#renderer = 'nerdfont'
'''

#[[plugins]]
#repo = 'edkolev/tmuxline.vim'
#on_cmd = 'Tmuxline'

#-------------------------------------------
# Others
#-------------------------------------------
[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'wakatime/vim-wakatime'
